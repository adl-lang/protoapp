module protoapp.apis.captest {

import common.http.Unit;
import common.capability.HttpPost;
import common.capability.HttpGet;
import common.capability.CapabilityApi;
import common.capability.CapabilityToken;

type A_ApiToken = String;
type A_ApiTokenMarker = CapabilityToken<A_ApiToken>;
type B_ApiToken = String;
type B_ApiTokenMarker = CapabilityToken<B_ApiToken>;
type C_ApiToken = String;
type C_ApiTokenMarker = CapabilityToken<C_ApiToken>;

struct ApiRequests {
  HttpPost<Unit, A_ApiResp> a = {
    "path": "/a"
  };
  CapabilityApi<A_ApiToken,Unit,A_Api> accessTokenApi = {
    "service": {},
    "token_delivery": {"header": "a_cookie"}
  };
};

struct A_Api {
  HttpPost<AB, B_ApiResp> b = {
    "path": "/b"
  };
  HttpGet<B_ApiResp> a2 = {
    "path": "/a2"
  };

  CapabilityApi<B_ApiToken,Unit,B_Api> accessTokenApi = {
    "service": {},
    "token_delivery": {"header": "b_cookie"}
  };
};

struct AB {
  String a;
  String b;
};

struct B_Api {
  HttpPost<B_ApiToken, C_ApiResp> c = {
    "path": "/c"
  };

  CapabilityApi<C_ApiToken,Unit,C_Api> accessTokenApi = {
    "service": {},
    "token_delivery": {"header": "c_cookie"}
  };
};

struct C_Api {
  HttpPost<C_ApiToken, String> hello = {
    "path": "/hello"
  };
};

union A_ApiResp {
  @A_ApiTokenMarker {}
  String token;
};
union B_ApiResp {
  @B_ApiTokenMarker {}
  String token;
};
union C_ApiResp {
  @C_ApiTokenMarker {}
  String token;
};

};
