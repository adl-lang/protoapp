// Code generated by goadlc v3 - DO NOT EDIT.
package db

import (
	"github.com/adl-lang/goadl_common/common/db"
	strings2 "github.com/adl-lang/goadl_common/common/strings"
	"time"
)

type AppUser struct {
	_AppUser
}

type _AppUser struct {
	Fullname        strings2.StringNE `json:"fullname"`
	Email           strings2.StringNE `json:"email"`
	IsAdmin         bool              `json:"isAdmin"`
	Hashed_password strings2.StringNE `json:"hashed_password"`
}

func MakeAll_AppUser(
	fullname strings2.StringNE,
	email strings2.StringNE,
	isadmin bool,
	hashed_password strings2.StringNE,
) AppUser {
	return AppUser{
		_AppUser{
			Fullname:        fullname,
			Email:           email,
			IsAdmin:         isadmin,
			Hashed_password: hashed_password,
		},
	}
}

func Make_AppUser(
	fullname strings2.StringNE,
	email strings2.StringNE,
	isadmin bool,
) AppUser {
	ret := AppUser{
		_AppUser{
			Fullname:        fullname,
			Email:           email,
			IsAdmin:         isadmin,
			Hashed_password: ((*AppUser)(nil)).Default_hashed_password(),
		},
	}
	return ret
}

func (*AppUser) Default_hashed_password() strings2.StringNE {
	return ""
}

type AppUserId = db.DbKey[AppUserTable]

type AppUserTable db.WithId[AppUser]

type Message struct {
	_Message
}

type _Message struct {
	Posted_at time.Time         `json:"posted_at"`
	Posted_by AppUserId         `json:"posted_by"`
	Message   strings2.StringML `json:"message"`
}

func MakeAll_Message(
	posted_at time.Time,
	posted_by AppUserId,
	message strings2.StringML,
) Message {
	return Message{
		_Message{
			Posted_at: posted_at,
			Posted_by: posted_by,
			Message:   message,
		},
	}
}

func Make_Message(
	posted_at time.Time,
	posted_by AppUserId,
	message strings2.StringML,
) Message {
	ret := Message{
		_Message{
			Posted_at: posted_at,
			Posted_by: posted_by,
			Message:   message,
		},
	}
	return ret
}

type MessageId = db.DbKey[MessageTable]

type MessageTable db.WithId[Message]
