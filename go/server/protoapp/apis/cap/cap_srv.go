// Code generated by goadlc v3 - DO NOT EDIT.
package cap

import (
	"context"
	"github.com/adl-lang/goadl_common/common/capability"
	http2 "github.com/adl-lang/goadl_common/common/http"
	"github.com/adl-lang/goadl_protoapp/protoapp/db"
	"net/http"
)

type ApiRequests_Service interface {
	Healthy(ctx context.Context) (http2.Unit, error)
	Ping(ctx context.Context, req http2.Unit) (http2.Unit, error)
	Login(ctx context.Context, req LoginReq) (LoginResp, error)
	Logout(ctx context.Context, req http2.Unit) (http2.Unit, error)
	GetAccessTokenApi() AccessApiRequests_Service[AccessToken, Capability]
	GetRefreshTokenApi() RefreshApiRequests_Service[RefreshToken, http2.Unit]
}

func Register_ApiRequests(
	mux *http.ServeMux,
	srv ApiRequests_Service,
	accesstokenapi_capr capability.CapabilityRetriever[AccessToken, Capability],
	refreshtokenapi_capr capability.CapabilityRetriever[RefreshToken, http2.Unit],
) {
	reqs := Make_ApiRequests()
	capability.AdlGet(mux, reqs.Healthy, srv.Healthy)
	capability.AdlPost(mux, reqs.Ping, srv.Ping)
	capability.AdlPost(mux, reqs.Login, srv.Login)
	capability.AdlPost(mux, reqs.Logout, srv.Logout)
	Register_AccessApiRequests(
		mux,
		srv.GetAccessTokenApi(),
		reqs.AccessTokenApi,
		accesstokenapi_capr,
	)
	Register_RefreshApiRequests(
		mux,
		srv.GetRefreshTokenApi(),
		reqs.RefreshTokenApi,
		refreshtokenapi_capr,
	)
}

type AccessApiRequests_Service[C any, S any] interface {
	NewMessage(ctx context.Context, cp S, req NewMessageReq) (db.MessageId, error)
	RecentMessages(ctx context.Context, cp S, req RecentMessagesReq) (Paginated[Message], error)
	WhoAmI(ctx context.Context, cp S) (UserProfile, error)
}

func Register_AccessApiRequests[C any, S any](
	mux *http.ServeMux,
	srv AccessApiRequests_Service[C, S],
	api capability.CapabilityApi[C, S, AccessApiRequests],
	capr capability.CapabilityRetriever[C, S],
) {
	reqs := api.Service
	capability.AdlCapPost(mux, reqs.NewMessage, srv.NewMessage, api, capr)
	capability.AdlCapPost(mux, reqs.RecentMessages, srv.RecentMessages, api, capr)
	capability.AdlCapGet(mux, reqs.WhoAmI, srv.WhoAmI, api, capr)
}

type RefreshApiRequests_Service[C any, S any] interface {
	Refresh(ctx context.Context, cp S, req RefreshReq) (RefreshResp, error)
}

func Register_RefreshApiRequests[C any, S any](
	mux *http.ServeMux,
	srv RefreshApiRequests_Service[C, S],
	api capability.CapabilityApi[C, S, RefreshApiRequests],
	capr capability.CapabilityRetriever[C, S],
) {
	reqs := api.Service
	capability.AdlCapPost(mux, reqs.Refresh, srv.Refresh, api, capr)
}
