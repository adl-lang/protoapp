// Code generated by goadlc v3 - DO NOT EDIT.
package cap

import (
	"github.com/adl-lang/goadl_common/common/capability"
	"github.com/adl-lang/goadl_common/common/http"
	"github.com/adl-lang/goadl_protoapp/protoapp/apis/types"
	"github.com/adl-lang/goadl_protoapp/protoapp/db"
	"github.com/adl-lang/goadl_rt/v3/sys/adlast"
)

type AccessApiRequests struct {
	_AccessApiRequests
}

type _AccessApiRequests struct {
	NewMessage     capability.HttpPost[types.NewMessageReq, db.MessageId]                       `json:"newMessage"`
	RecentMessages capability.HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]] `json:"recentMessages"`
	Who_am_i       capability.HttpGet[types.UserWithId]                                         `json:"who_am_i"`
}

func MakeAll_AccessApiRequests(
	newmessage capability.HttpPost[types.NewMessageReq, db.MessageId],
	recentmessages capability.HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]],
	who_am_i capability.HttpGet[types.UserWithId],
) AccessApiRequests {
	return AccessApiRequests{
		_AccessApiRequests{
			NewMessage:     newmessage,
			RecentMessages: recentmessages,
			Who_am_i:       who_am_i,
		},
	}
}

func Make_AccessApiRequests() AccessApiRequests {
	ret := AccessApiRequests{
		_AccessApiRequests{
			NewMessage:     ((*AccessApiRequests)(nil)).Default_newMessage(),
			RecentMessages: ((*AccessApiRequests)(nil)).Default_recentMessages(),
			Who_am_i:       ((*AccessApiRequests)(nil)).Default_who_am_i(),
		},
	}
	return ret
}

func (*AccessApiRequests) Default_newMessage() capability.HttpPost[types.NewMessageReq, db.MessageId] {
	return capability.MakeAll_HttpPost[types.NewMessageReq, db.MessageId](
		"/messages/new",
		nil,
		adlast.Make_ATypeExpr[types.NewMessageReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"NewMessageReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[db.MessageId](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.db",
					"MessageId",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*AccessApiRequests) Default_recentMessages() capability.HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]] {
	return capability.MakeAll_HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]](
		"/messages/recent",
		nil,
		adlast.Make_ATypeExpr[types.RecentMessagesReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"RecentMessagesReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[types.Paginated[types.Message]](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"Paginated",
				),
			),
			[]adlast.TypeExpr{
				adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"Message",
						),
					),
					[]adlast.TypeExpr{},
				),
			},
		)),
	)
}
func (*AccessApiRequests) Default_who_am_i() capability.HttpGet[types.UserWithId] {
	return capability.MakeAll_HttpGet[types.UserWithId](
		"/whoami",
		nil,
		adlast.Make_ATypeExpr[types.UserWithId](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"UserWithId",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}

type ApiRequests struct {
	_ApiRequests
}

type _ApiRequests struct {
	Healthy         capability.HttpGet[http.Unit]                                                 `json:"healthy"`
	Ping            capability.HttpPost[http.Unit, http.Unit]                                     `json:"ping"`
	Login           capability.HttpPost[types.LoginReq, types.LoginResp]                          `json:"login"`
	New_refresh     capability.HttpPost[types.LoginReq, types.NewRefreshResp]                     `json:"new_refresh"`
	Logout          capability.HttpPost[http.Unit, http.Unit]                                     `json:"logout"`
	RefreshTokenApi capability.CapabilityApi[types.RefreshToken, http.Unit, RefreshApiRequests]   `json:"refreshTokenApi"`
	UserApi         capability.CapabilityApi[types.AdminAccessToken, Capability, UserApiRequests] `json:"userApi"`
}

func MakeAll_ApiRequests(
	healthy capability.HttpGet[http.Unit],
	ping capability.HttpPost[http.Unit, http.Unit],
	login capability.HttpPost[types.LoginReq, types.LoginResp],
	new_refresh capability.HttpPost[types.LoginReq, types.NewRefreshResp],
	logout capability.HttpPost[http.Unit, http.Unit],
	refreshtokenapi capability.CapabilityApi[types.RefreshToken, http.Unit, RefreshApiRequests],
	userapi capability.CapabilityApi[types.AdminAccessToken, Capability, UserApiRequests],
) ApiRequests {
	return ApiRequests{
		_ApiRequests{
			Healthy:         healthy,
			Ping:            ping,
			Login:           login,
			New_refresh:     new_refresh,
			Logout:          logout,
			RefreshTokenApi: refreshtokenapi,
			UserApi:         userapi,
		},
	}
}

func Make_ApiRequests() ApiRequests {
	ret := ApiRequests{
		_ApiRequests{
			Healthy:         ((*ApiRequests)(nil)).Default_healthy(),
			Ping:            ((*ApiRequests)(nil)).Default_ping(),
			Login:           ((*ApiRequests)(nil)).Default_login(),
			New_refresh:     ((*ApiRequests)(nil)).Default_new_refresh(),
			Logout:          ((*ApiRequests)(nil)).Default_logout(),
			RefreshTokenApi: ((*ApiRequests)(nil)).Default_refreshTokenApi(),
			UserApi:         ((*ApiRequests)(nil)).Default_userApi(),
		},
	}
	return ret
}

func (*ApiRequests) Default_healthy() capability.HttpGet[http.Unit] {
	return capability.MakeAll_HttpGet[http.Unit](
		"/",
		nil,
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_ping() capability.HttpPost[http.Unit, http.Unit] {
	return capability.MakeAll_HttpPost[http.Unit, http.Unit](
		"/ping",
		nil,
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_login() capability.HttpPost[types.LoginReq, types.LoginResp] {
	return capability.MakeAll_HttpPost[types.LoginReq, types.LoginResp](
		"/login",
		nil,
		adlast.Make_ATypeExpr[types.LoginReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"LoginReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[types.LoginResp](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"LoginResp",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_new_refresh() capability.HttpPost[types.LoginReq, types.NewRefreshResp] {
	return capability.MakeAll_HttpPost[types.LoginReq, types.NewRefreshResp](
		"/new_refresh",
		nil,
		adlast.Make_ATypeExpr[types.LoginReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"LoginReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[types.NewRefreshResp](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"NewRefreshResp",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_logout() capability.HttpPost[http.Unit, http.Unit] {
	return capability.MakeAll_HttpPost[http.Unit, http.Unit](
		"/logout",
		nil,
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_refreshTokenApi() capability.CapabilityApi[types.RefreshToken, http.Unit, RefreshApiRequests] {
	return capability.MakeAll_CapabilityApi[types.RefreshToken, http.Unit, RefreshApiRequests](
		adlast.Make_ATypeExpr[types.RefreshToken](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"RefreshToken",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
		"",
		MakeAll_RefreshApiRequests(
			capability.MakeAll_HttpPost[types.RefreshReq, types.RefreshResp](
				"/refresh",
				nil,
				adlast.Make_ATypeExpr[types.RefreshReq](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"RefreshReq",
						),
					),
					[]adlast.TypeExpr{},
				)),
				adlast.Make_ATypeExpr[types.RefreshResp](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"RefreshResp",
						),
					),
					[]adlast.TypeExpr{},
				)),
			),
			capability.MakeAll_CapabilityApi[types.AccessToken, Capability, AccessApiRequests](
				adlast.Make_ATypeExpr[types.AccessToken](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"AccessToken",
						),
					),
					[]adlast.TypeExpr{},
				)),
				adlast.Make_ATypeExpr[Capability](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.cap",
							"Capability",
						),
					),
					[]adlast.TypeExpr{},
				)),
				"",
				MakeAll_AccessApiRequests(
					capability.MakeAll_HttpPost[types.NewMessageReq, db.MessageId](
						"/messages/new",
						nil,
						adlast.Make_ATypeExpr[types.NewMessageReq](adlast.MakeAll_TypeExpr(
							adlast.Make_TypeRef_reference(
								adlast.MakeAll_ScopedName(
									"protoapp.apis.types",
									"NewMessageReq",
								),
							),
							[]adlast.TypeExpr{},
						)),
						adlast.Make_ATypeExpr[db.MessageId](adlast.MakeAll_TypeExpr(
							adlast.Make_TypeRef_reference(
								adlast.MakeAll_ScopedName(
									"protoapp.db",
									"MessageId",
								),
							),
							[]adlast.TypeExpr{},
						)),
					),
					capability.MakeAll_HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]](
						"/messages/recent",
						nil,
						adlast.Make_ATypeExpr[types.RecentMessagesReq](adlast.MakeAll_TypeExpr(
							adlast.Make_TypeRef_reference(
								adlast.MakeAll_ScopedName(
									"protoapp.apis.types",
									"RecentMessagesReq",
								),
							),
							[]adlast.TypeExpr{},
						)),
						adlast.Make_ATypeExpr[types.Paginated[types.Message]](adlast.MakeAll_TypeExpr(
							adlast.Make_TypeRef_reference(
								adlast.MakeAll_ScopedName(
									"protoapp.apis.types",
									"Paginated",
								),
							),
							[]adlast.TypeExpr{
								adlast.MakeAll_TypeExpr(
									adlast.Make_TypeRef_reference(
										adlast.MakeAll_ScopedName(
											"protoapp.apis.types",
											"Message",
										),
									),
									[]adlast.TypeExpr{},
								),
							},
						)),
					),
					capability.MakeAll_HttpGet[types.UserWithId](
						"/whoami",
						nil,
						adlast.Make_ATypeExpr[types.UserWithId](adlast.MakeAll_TypeExpr(
							adlast.Make_TypeRef_reference(
								adlast.MakeAll_ScopedName(
									"protoapp.apis.types",
									"UserWithId",
								),
							),
							[]adlast.TypeExpr{},
						)),
					),
				),
				"Logged-in API",
				capability.Make_DeliveryMethod_auth_bearer(),
			),
		),
		"Refresh Token API",
		capability.Make_DeliveryMethod_header(
			"refreshToken",
		),
	)
}
func (*ApiRequests) Default_userApi() capability.CapabilityApi[types.AdminAccessToken, Capability, UserApiRequests] {
	return capability.MakeAll_CapabilityApi[types.AdminAccessToken, Capability, UserApiRequests](
		adlast.Make_ATypeExpr[types.AdminAccessToken](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"AdminAccessToken",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[Capability](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.cap",
					"Capability",
				),
			),
			[]adlast.TypeExpr{},
		)),
		"",
		MakeAll_UserApiRequests(
			capability.MakeAll_HttpPost[types.UserDetails, db.AppUserId](
				"/users/create",
				nil,
				adlast.Make_ATypeExpr[types.UserDetails](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"UserDetails",
						),
					),
					[]adlast.TypeExpr{},
				)),
				adlast.Make_ATypeExpr[db.AppUserId](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.db",
							"AppUserId",
						),
					),
					[]adlast.TypeExpr{},
				)),
			),
			capability.MakeAll_HttpPost[types.WithId[db.AppUserId, types.UserDetails], http.Unit](
				"/users/update",
				nil,
				adlast.Make_ATypeExpr[types.WithId[db.AppUserId, types.UserDetails]](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"WithId",
						),
					),
					[]adlast.TypeExpr{
						adlast.MakeAll_TypeExpr(
							adlast.Make_TypeRef_reference(
								adlast.MakeAll_ScopedName(
									"protoapp.db",
									"AppUserId",
								),
							),
							[]adlast.TypeExpr{},
						),
						adlast.MakeAll_TypeExpr(
							adlast.Make_TypeRef_reference(
								adlast.MakeAll_ScopedName(
									"protoapp.apis.types",
									"UserDetails",
								),
							),
							[]adlast.TypeExpr{},
						),
					},
				)),
				adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"common.http",
							"Unit",
						),
					),
					[]adlast.TypeExpr{},
				)),
			),
			capability.MakeAll_HttpPost[types.QueryUsersReq, types.Paginated[types.UserWithId]](
				"/users/query",
				nil,
				adlast.Make_ATypeExpr[types.QueryUsersReq](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"QueryUsersReq",
						),
					),
					[]adlast.TypeExpr{},
				)),
				adlast.Make_ATypeExpr[types.Paginated[types.UserWithId]](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"Paginated",
						),
					),
					[]adlast.TypeExpr{
						adlast.MakeAll_TypeExpr(
							adlast.Make_TypeRef_reference(
								adlast.MakeAll_ScopedName(
									"protoapp.apis.types",
									"UserWithId",
								),
							),
							[]adlast.TypeExpr{},
						),
					},
				)),
			),
		),
		"User Admin API",
		capability.Make_DeliveryMethod_auth_bearer(),
	)
}

type Capability struct {
	_Capability
}

type _Capability struct {
	User_id string   `json:"user_id"`
	Roles   []string `json:"roles"`
}

func MakeAll_Capability(
	user_id string,
	roles []string,
) Capability {
	return Capability{
		_Capability{
			User_id: user_id,
			Roles:   roles,
		},
	}
}

func Make_Capability(
	user_id string,
	roles []string,
) Capability {
	ret := Capability{
		_Capability{
			User_id: user_id,
			Roles:   roles,
		},
	}
	return ret
}

type RefreshApiRequests struct {
	_RefreshApiRequests
}

type _RefreshApiRequests struct {
	Refresh        capability.HttpPost[types.RefreshReq, types.RefreshResp]                   `json:"refresh"`
	AccessTokenApi capability.CapabilityApi[types.AccessToken, Capability, AccessApiRequests] `json:"accessTokenApi"`
}

func MakeAll_RefreshApiRequests(
	refresh capability.HttpPost[types.RefreshReq, types.RefreshResp],
	accesstokenapi capability.CapabilityApi[types.AccessToken, Capability, AccessApiRequests],
) RefreshApiRequests {
	return RefreshApiRequests{
		_RefreshApiRequests{
			Refresh:        refresh,
			AccessTokenApi: accesstokenapi,
		},
	}
}

func Make_RefreshApiRequests() RefreshApiRequests {
	ret := RefreshApiRequests{
		_RefreshApiRequests{
			Refresh:        ((*RefreshApiRequests)(nil)).Default_refresh(),
			AccessTokenApi: ((*RefreshApiRequests)(nil)).Default_accessTokenApi(),
		},
	}
	return ret
}

func (*RefreshApiRequests) Default_refresh() capability.HttpPost[types.RefreshReq, types.RefreshResp] {
	return capability.MakeAll_HttpPost[types.RefreshReq, types.RefreshResp](
		"/refresh",
		nil,
		adlast.Make_ATypeExpr[types.RefreshReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"RefreshReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[types.RefreshResp](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"RefreshResp",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*RefreshApiRequests) Default_accessTokenApi() capability.CapabilityApi[types.AccessToken, Capability, AccessApiRequests] {
	return capability.MakeAll_CapabilityApi[types.AccessToken, Capability, AccessApiRequests](
		adlast.Make_ATypeExpr[types.AccessToken](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"AccessToken",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[Capability](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.cap",
					"Capability",
				),
			),
			[]adlast.TypeExpr{},
		)),
		"",
		MakeAll_AccessApiRequests(
			capability.MakeAll_HttpPost[types.NewMessageReq, db.MessageId](
				"/messages/new",
				nil,
				adlast.Make_ATypeExpr[types.NewMessageReq](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"NewMessageReq",
						),
					),
					[]adlast.TypeExpr{},
				)),
				adlast.Make_ATypeExpr[db.MessageId](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.db",
							"MessageId",
						),
					),
					[]adlast.TypeExpr{},
				)),
			),
			capability.MakeAll_HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]](
				"/messages/recent",
				nil,
				adlast.Make_ATypeExpr[types.RecentMessagesReq](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"RecentMessagesReq",
						),
					),
					[]adlast.TypeExpr{},
				)),
				adlast.Make_ATypeExpr[types.Paginated[types.Message]](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"Paginated",
						),
					),
					[]adlast.TypeExpr{
						adlast.MakeAll_TypeExpr(
							adlast.Make_TypeRef_reference(
								adlast.MakeAll_ScopedName(
									"protoapp.apis.types",
									"Message",
								),
							),
							[]adlast.TypeExpr{},
						),
					},
				)),
			),
			capability.MakeAll_HttpGet[types.UserWithId](
				"/whoami",
				nil,
				adlast.Make_ATypeExpr[types.UserWithId](adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"UserWithId",
						),
					),
					[]adlast.TypeExpr{},
				)),
			),
		),
		"Logged-in API",
		capability.Make_DeliveryMethod_auth_bearer(),
	)
}

type UserApiRequests struct {
	_UserApiRequests
}

type _UserApiRequests struct {
	Create_user capability.HttpPost[types.UserDetails, db.AppUserId]                          `json:"create_user"`
	Update_user capability.HttpPost[types.WithId[db.AppUserId, types.UserDetails], http.Unit] `json:"update_user"`
	Query_users capability.HttpPost[types.QueryUsersReq, types.Paginated[types.UserWithId]]   `json:"query_users"`
}

func MakeAll_UserApiRequests(
	create_user capability.HttpPost[types.UserDetails, db.AppUserId],
	update_user capability.HttpPost[types.WithId[db.AppUserId, types.UserDetails], http.Unit],
	query_users capability.HttpPost[types.QueryUsersReq, types.Paginated[types.UserWithId]],
) UserApiRequests {
	return UserApiRequests{
		_UserApiRequests{
			Create_user: create_user,
			Update_user: update_user,
			Query_users: query_users,
		},
	}
}

func Make_UserApiRequests() UserApiRequests {
	ret := UserApiRequests{
		_UserApiRequests{
			Create_user: ((*UserApiRequests)(nil)).Default_create_user(),
			Update_user: ((*UserApiRequests)(nil)).Default_update_user(),
			Query_users: ((*UserApiRequests)(nil)).Default_query_users(),
		},
	}
	return ret
}

func (*UserApiRequests) Default_create_user() capability.HttpPost[types.UserDetails, db.AppUserId] {
	return capability.MakeAll_HttpPost[types.UserDetails, db.AppUserId](
		"/users/create",
		nil,
		adlast.Make_ATypeExpr[types.UserDetails](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"UserDetails",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[db.AppUserId](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.db",
					"AppUserId",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*UserApiRequests) Default_update_user() capability.HttpPost[types.WithId[db.AppUserId, types.UserDetails], http.Unit] {
	return capability.MakeAll_HttpPost[types.WithId[db.AppUserId, types.UserDetails], http.Unit](
		"/users/update",
		nil,
		adlast.Make_ATypeExpr[types.WithId[db.AppUserId, types.UserDetails]](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"WithId",
				),
			),
			[]adlast.TypeExpr{
				adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.db",
							"AppUserId",
						),
					),
					[]adlast.TypeExpr{},
				),
				adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"UserDetails",
						),
					),
					[]adlast.TypeExpr{},
				),
			},
		)),
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*UserApiRequests) Default_query_users() capability.HttpPost[types.QueryUsersReq, types.Paginated[types.UserWithId]] {
	return capability.MakeAll_HttpPost[types.QueryUsersReq, types.Paginated[types.UserWithId]](
		"/users/query",
		nil,
		adlast.Make_ATypeExpr[types.QueryUsersReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"QueryUsersReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[types.Paginated[types.UserWithId]](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"Paginated",
				),
			),
			[]adlast.TypeExpr{
				adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"UserWithId",
						),
					),
					[]adlast.TypeExpr{},
				),
			},
		)),
	)
}
