// Code generated by goadlc v3 - DO NOT EDIT.
package ui

import (
	"github.com/adl-lang/goadl_common/common/http"
	"github.com/adl-lang/goadl_protoapp/protoapp/apis/types"
	"github.com/adl-lang/goadl_protoapp/protoapp/db"
	"github.com/adl-lang/goadl_rt/v3/sys/adlast"
)

type ApiRequests struct {
	_ApiRequests
}

type _ApiRequests struct {
	Healthy         http.HttpGet[http.Unit]                                                 `json:"healthy"`
	Ping            http.HttpPost[http.Unit, http.Unit]                                     `json:"ping"`
	Login           http.HttpPost[types.LoginReq, types.LoginResp]                          `json:"login"`
	Refresh         http.HttpPost[types.RefreshReq, types.RefreshResp]                      `json:"refresh"`
	Logout          http.HttpPost[http.Unit, http.Unit]                                     `json:"logout"`
	New_message     http.HttpPost[types.NewMessageReq, db.MessageId]                        `json:"new_message"`
	Recent_messages http.HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]]  `json:"recent_messages"`
	Who_am_i        http.HttpGet[types.UserWithId]                                          `json:"who_am_i"`
	Create_user     http.HttpPost[types.UserDetails, db.AppUserId]                          `json:"create_user"`
	Update_user     http.HttpPost[types.WithId[db.AppUserId, types.UserDetails], http.Unit] `json:"update_user"`
	Query_users     http.HttpPost[types.QueryUsersReq, types.Paginated[types.UserWithId]]   `json:"query_users"`
	Message_api     MessageApi                                                              `json:"message_api"`
}

func MakeAll_ApiRequests(
	healthy http.HttpGet[http.Unit],
	ping http.HttpPost[http.Unit, http.Unit],
	login http.HttpPost[types.LoginReq, types.LoginResp],
	refresh http.HttpPost[types.RefreshReq, types.RefreshResp],
	logout http.HttpPost[http.Unit, http.Unit],
	new_message http.HttpPost[types.NewMessageReq, db.MessageId],
	recent_messages http.HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]],
	who_am_i http.HttpGet[types.UserWithId],
	create_user http.HttpPost[types.UserDetails, db.AppUserId],
	update_user http.HttpPost[types.WithId[db.AppUserId, types.UserDetails], http.Unit],
	query_users http.HttpPost[types.QueryUsersReq, types.Paginated[types.UserWithId]],
	message_api MessageApi,
) ApiRequests {
	return ApiRequests{
		_ApiRequests{
			Healthy:         healthy,
			Ping:            ping,
			Login:           login,
			Refresh:         refresh,
			Logout:          logout,
			New_message:     new_message,
			Recent_messages: recent_messages,
			Who_am_i:        who_am_i,
			Create_user:     create_user,
			Update_user:     update_user,
			Query_users:     query_users,
			Message_api:     message_api,
		},
	}
}

func Make_ApiRequests() ApiRequests {
	ret := ApiRequests{
		_ApiRequests{
			Healthy:         ((*ApiRequests)(nil)).Default_healthy(),
			Ping:            ((*ApiRequests)(nil)).Default_ping(),
			Login:           ((*ApiRequests)(nil)).Default_login(),
			Refresh:         ((*ApiRequests)(nil)).Default_refresh(),
			Logout:          ((*ApiRequests)(nil)).Default_logout(),
			New_message:     ((*ApiRequests)(nil)).Default_new_message(),
			Recent_messages: ((*ApiRequests)(nil)).Default_recent_messages(),
			Who_am_i:        ((*ApiRequests)(nil)).Default_who_am_i(),
			Create_user:     ((*ApiRequests)(nil)).Default_create_user(),
			Update_user:     ((*ApiRequests)(nil)).Default_update_user(),
			Query_users:     ((*ApiRequests)(nil)).Default_query_users(),
			Message_api:     ((*ApiRequests)(nil)).Default_message_api(),
		},
	}
	return ret
}

func (*ApiRequests) Default_healthy() http.HttpGet[http.Unit] {
	return http.MakeAll_HttpGet[http.Unit](
		"/",
		http.Make_HttpSecurity_public(),
		nil,
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_ping() http.HttpPost[http.Unit, http.Unit] {
	return http.MakeAll_HttpPost[http.Unit, http.Unit](
		"/ping",
		http.Make_HttpSecurity_public(),
		nil,
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_login() http.HttpPost[types.LoginReq, types.LoginResp] {
	return http.MakeAll_HttpPost[types.LoginReq, types.LoginResp](
		"/login",
		http.Make_HttpSecurity_public(),
		nil,
		adlast.Make_ATypeExpr[types.LoginReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"LoginReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[types.LoginResp](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"LoginResp",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_refresh() http.HttpPost[types.RefreshReq, types.RefreshResp] {
	return http.MakeAll_HttpPost[types.RefreshReq, types.RefreshResp](
		"/refresh",
		http.Make_HttpSecurity_public(),
		nil,
		adlast.Make_ATypeExpr[types.RefreshReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"RefreshReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[types.RefreshResp](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"RefreshResp",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_logout() http.HttpPost[http.Unit, http.Unit] {
	return http.MakeAll_HttpPost[http.Unit, http.Unit](
		"/logout",
		http.Make_HttpSecurity_public(),
		nil,
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_new_message() http.HttpPost[types.NewMessageReq, db.MessageId] {
	return http.MakeAll_HttpPost[types.NewMessageReq, db.MessageId](
		"/messages/new",
		http.Make_HttpSecurity_token(),
		nil,
		adlast.Make_ATypeExpr[types.NewMessageReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"NewMessageReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[db.MessageId](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.db",
					"MessageId",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_recent_messages() http.HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]] {
	return http.MakeAll_HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]](
		"/messages/recent",
		http.Make_HttpSecurity_token(),
		nil,
		adlast.Make_ATypeExpr[types.RecentMessagesReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"RecentMessagesReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[types.Paginated[types.Message]](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"Paginated",
				),
			),
			[]adlast.TypeExpr{
				adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"Message",
						),
					),
					[]adlast.TypeExpr{},
				),
			},
		)),
	)
}
func (*ApiRequests) Default_who_am_i() http.HttpGet[types.UserWithId] {
	return http.MakeAll_HttpGet[types.UserWithId](
		"/whoami",
		http.Make_HttpSecurity_token(),
		nil,
		adlast.Make_ATypeExpr[types.UserWithId](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"UserWithId",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_create_user() http.HttpPost[types.UserDetails, db.AppUserId] {
	return http.MakeAll_HttpPost[types.UserDetails, db.AppUserId](
		"/users/create",
		http.Make_HttpSecurity_tokenWithRole(
			"admin",
		),
		nil,
		adlast.Make_ATypeExpr[types.UserDetails](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"UserDetails",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[db.AppUserId](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.db",
					"AppUserId",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_update_user() http.HttpPost[types.WithId[db.AppUserId, types.UserDetails], http.Unit] {
	return http.MakeAll_HttpPost[types.WithId[db.AppUserId, types.UserDetails], http.Unit](
		"/users/update",
		http.Make_HttpSecurity_tokenWithRole(
			"admin",
		),
		nil,
		adlast.Make_ATypeExpr[types.WithId[db.AppUserId, types.UserDetails]](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"WithId",
				),
			),
			[]adlast.TypeExpr{
				adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.db",
							"AppUserId",
						),
					),
					[]adlast.TypeExpr{},
				),
				adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"UserDetails",
						),
					),
					[]adlast.TypeExpr{},
				),
			},
		)),
		adlast.Make_ATypeExpr[http.Unit](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"common.http",
					"Unit",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*ApiRequests) Default_query_users() http.HttpPost[types.QueryUsersReq, types.Paginated[types.UserWithId]] {
	return http.MakeAll_HttpPost[types.QueryUsersReq, types.Paginated[types.UserWithId]](
		"/users/query",
		http.Make_HttpSecurity_tokenWithRole(
			"admin",
		),
		nil,
		adlast.Make_ATypeExpr[types.QueryUsersReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"QueryUsersReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[types.Paginated[types.UserWithId]](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"Paginated",
				),
			),
			[]adlast.TypeExpr{
				adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"UserWithId",
						),
					),
					[]adlast.TypeExpr{},
				),
			},
		)),
	)
}
func (*ApiRequests) Default_message_api() MessageApi {
	return MakeAll_MessageApi(
		http.MakeAll_HttpPost[types.NewMessageReq, db.MessageId](
			"/messages/new",
			http.Make_HttpSecurity_token(),
			nil,
			adlast.Make_ATypeExpr[types.NewMessageReq](adlast.MakeAll_TypeExpr(
				adlast.Make_TypeRef_reference(
					adlast.MakeAll_ScopedName(
						"protoapp.apis.types",
						"NewMessageReq",
					),
				),
				[]adlast.TypeExpr{},
			)),
			adlast.Make_ATypeExpr[db.MessageId](adlast.MakeAll_TypeExpr(
				adlast.Make_TypeRef_reference(
					adlast.MakeAll_ScopedName(
						"protoapp.db",
						"MessageId",
					),
				),
				[]adlast.TypeExpr{},
			)),
		),
		http.MakeAll_HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]](
			"/messages/recent",
			http.Make_HttpSecurity_token(),
			nil,
			adlast.Make_ATypeExpr[types.RecentMessagesReq](adlast.MakeAll_TypeExpr(
				adlast.Make_TypeRef_reference(
					adlast.MakeAll_ScopedName(
						"protoapp.apis.types",
						"RecentMessagesReq",
					),
				),
				[]adlast.TypeExpr{},
			)),
			adlast.Make_ATypeExpr[types.Paginated[types.Message]](adlast.MakeAll_TypeExpr(
				adlast.Make_TypeRef_reference(
					adlast.MakeAll_ScopedName(
						"protoapp.apis.types",
						"Paginated",
					),
				),
				[]adlast.TypeExpr{
					adlast.MakeAll_TypeExpr(
						adlast.Make_TypeRef_reference(
							adlast.MakeAll_ScopedName(
								"protoapp.apis.types",
								"Message",
							),
						),
						[]adlast.TypeExpr{},
					),
				},
			)),
		),
	)
}

type MessageApi struct {
	_MessageApi
}

type _MessageApi struct {
	New_message     http.HttpPost[types.NewMessageReq, db.MessageId]                       `json:"new_message"`
	Recent_messages http.HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]] `json:"recent_messages"`
}

func MakeAll_MessageApi(
	new_message http.HttpPost[types.NewMessageReq, db.MessageId],
	recent_messages http.HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]],
) MessageApi {
	return MessageApi{
		_MessageApi{
			New_message:     new_message,
			Recent_messages: recent_messages,
		},
	}
}

func Make_MessageApi() MessageApi {
	ret := MessageApi{
		_MessageApi{
			New_message:     ((*MessageApi)(nil)).Default_new_message(),
			Recent_messages: ((*MessageApi)(nil)).Default_recent_messages(),
		},
	}
	return ret
}

func (*MessageApi) Default_new_message() http.HttpPost[types.NewMessageReq, db.MessageId] {
	return http.MakeAll_HttpPost[types.NewMessageReq, db.MessageId](
		"/messages/new",
		http.Make_HttpSecurity_token(),
		nil,
		adlast.Make_ATypeExpr[types.NewMessageReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"NewMessageReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[db.MessageId](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.db",
					"MessageId",
				),
			),
			[]adlast.TypeExpr{},
		)),
	)
}
func (*MessageApi) Default_recent_messages() http.HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]] {
	return http.MakeAll_HttpPost[types.RecentMessagesReq, types.Paginated[types.Message]](
		"/messages/recent",
		http.Make_HttpSecurity_token(),
		nil,
		adlast.Make_ATypeExpr[types.RecentMessagesReq](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"RecentMessagesReq",
				),
			),
			[]adlast.TypeExpr{},
		)),
		adlast.Make_ATypeExpr[types.Paginated[types.Message]](adlast.MakeAll_TypeExpr(
			adlast.Make_TypeRef_reference(
				adlast.MakeAll_ScopedName(
					"protoapp.apis.types",
					"Paginated",
				),
			),
			[]adlast.TypeExpr{
				adlast.MakeAll_TypeExpr(
					adlast.Make_TypeRef_reference(
						adlast.MakeAll_ScopedName(
							"protoapp.apis.types",
							"Message",
						),
					),
					[]adlast.TypeExpr{},
				),
			},
		)),
	)
}
