// Code generated by goadlc v3 - DO NOT EDIT.
package ui

import (
	"context"
	http2 "github.com/adl-lang/goadl_common/common/http"
	"github.com/adl-lang/goadl_protoapp/protoapp/apis/types"
	"github.com/adl-lang/goadl_protoapp/protoapp/db"
	"net/http"
)

type ApiRequests_Service interface {
	Healthy(ctx context.Context) (http2.Unit, error)
	Ping(ctx context.Context, req http2.Unit) (http2.Unit, error)
	Login(ctx context.Context, req types.LoginReq) (types.LoginResp, error)
	Refresh(ctx context.Context, req types.RefreshReq) (types.RefreshResp, error)
	Logout(ctx context.Context, req http2.Unit) (http2.Unit, error)
	New_message(ctx context.Context, req types.NewMessageReq) (db.MessageId, error)
	Recent_messages(ctx context.Context, req types.RecentMessagesReq) (types.Paginated[types.Message], error)
	Who_am_i(ctx context.Context) (types.UserWithId, error)
	Create_user(ctx context.Context, req types.UserDetails) (db.AppUserId, error)
	Update_user(ctx context.Context, req types.WithId[db.AppUserId, types.UserDetails]) (http2.Unit, error)
	Query_users(ctx context.Context, req types.QueryUsersReq) (types.Paginated[types.UserWithId], error)
	GetMessage_api() MessageApi_Service
}

func Register_ApiRequests(
	mux *http.ServeMux,
	srv ApiRequests_Service,
) {
	reqs := Make_ApiRequests()
	http2.AdlGet(mux, reqs.Healthy, srv.Healthy)
	http2.AdlPost(mux, reqs.Ping, srv.Ping)
	http2.AdlPost(mux, reqs.Login, srv.Login)
	http2.AdlPost(mux, reqs.Refresh, srv.Refresh)
	http2.AdlPost(mux, reqs.Logout, srv.Logout)
	http2.AdlPost(mux, reqs.New_message, srv.New_message)
	http2.AdlPost(mux, reqs.Recent_messages, srv.Recent_messages)
	http2.AdlGet(mux, reqs.Who_am_i, srv.Who_am_i)
	http2.AdlPost(mux, reqs.Create_user, srv.Create_user)
	http2.AdlPost(mux, reqs.Update_user, srv.Update_user)
	http2.AdlPost(mux, reqs.Query_users, srv.Query_users)
	Register_MessageApi(
		mux,
		srv.GetMessage_api(),
	)
}

type MessageApi_Service interface {
	New_message(ctx context.Context, req types.NewMessageReq) (db.MessageId, error)
	Recent_messages(ctx context.Context, req types.RecentMessagesReq) (types.Paginated[types.Message], error)
}

func Register_MessageApi(
	mux *http.ServeMux,
	srv MessageApi_Service,
) {
	reqs := Make_MessageApi()
	http2.AdlPost(mux, reqs.New_message, srv.New_message)
	http2.AdlPost(mux, reqs.Recent_messages, srv.Recent_messages)
}
